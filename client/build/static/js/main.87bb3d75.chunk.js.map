{"version":3,"sources":["pages/assets/profilepic.jpeg","utils/mutations.js","utils/auth.js","components/Login.js","components/SignUp.js","components/Navbar.js","components/Footer.js","pages/assets/vines.jpeg","pages/About.js","utils/queries.js","components/AddPlant.js","pages/MyGarden.js","pages/assets/hangingpots.jpeg","pages/Home.js","pages/Testimonials.js","pages/Contact.js","pages/Team.js","components/ReplyModal.js","components/ReplyComment.js","components/Likes.js","pages/FactsDB.js","components/Posts.js","components/AddComment.js","pages/Forum.js","pages/Profile.js","components/RandomFacts.js","pages/PlantFacts.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","gql","ADD_USER","ADD_PLANT","REMOVE_PLANT","ADD_WATER","ADD_POST","ADD_COMMENT","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","handleSignUp","handleLoginModal","useState","email","password","formState","setFormState","useMutation","login","handleChange","error","data","event","target","name","value","handleFormSubmit","a","preventDefault","console","log","variables","Auth","Grid","textAlign","style","height","paddingTop","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","type","onClick","Message","SignUp","firstName","lastName","username","addUser","alert","onSubmit","Field","Checkbox","label","pages","Nav","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","loginToggle","setLoginToggle","signUpToggle","setSignUpToggle","handleSignUpModal","settings","callback","routeTo","handleCloseNavMenu","AppBar","position","background","Container","Toolbar","disableGutters","to","Typography","variant","noWrap","component","sx","display","xs","md","id","alt","Box","flexGrow","IconButton","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","justifyContent","gap","Button","href","fontSize","my","Tooltip","title","p","Avatar","profilePic","mt","setting","key","className","width","backgroundColor","margin","outline","border","borderRadius","logout","Modal","bind","Footer","inverted","padding","divided","stackable","content","List","link","Item","Link","rel","Divider","section","centered","About","aboutImage","fontFamily","flexWrap","marginBottom","QUERY_ME","QUERY_POSTS","SizeChartModal","setOpen","basic","onOpen","trigger","Content","columns","Actions","AddPlantForm","handlePlantModal","nickname","plantType","plantSize","waterNeeded","plantState","setPlantState","addPlant","MyGarden","useQuery","loading","refetch","addWater","removePlant","plantToggle","setPlantToggle","plantData","me","myPlants","userData","percent","setPercent","plantCount","setPlantCount","setUsername","plantForm","handleAddWater","plantId","loggedIn","handleDeletePlant","useEffect","newPercent","plant","i","waterAdded","toFixed","length","m","gutterBottom","Table","compact","celled","Row","HeaderCell","Body","Cell","align","Progress","active","labelPosition","primary","_id","Icon","fullWidth","colSpan","e","mobile","tablet","computer","Card","minWidth","bgcolor","CardActionArea","CardMedia","image","CardContent","createdAt","Home","homeImage","container","floated","bordered","rounded","text","paddingBottom","avatar","marginTop","options","state","setState","Group","widths","Select","inline","Radio","checked","Component","HeaderExampleUsersIcon","Team","marginLeft","ReplyModal","props","commentText","setCommentText","addComment","handleReplySubmit","postId","commentAuthor","getProfile","reply","TextArea","ReplyComment","setReplyBox","replyButton","class","Likes","updateLikes","updated","prevState","likes","flexDirection","facts","fact","FeedExampleBasic","Feed","allPost","post","Event","Label","Summary","User","postCreator","Extra","postText","Comment","comments","comment","Author","commentCreator","Metadata","Text","Meta","float","Like","circular","encodeURIComponent","AddComment","setPostText","update","cache","addPost","posts","readQuery","query","writeQuery","setAllPost","Forum","allPosts","Posts","Profile","NumbofPlants","progress","alignItems","wrapped","ui","Description","extra","RandomFacts","generateRandomFact","PlantFacts","arr","num","Math","floor","random","newFact","shuffleFacts","sort","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","minHeight","alignContent","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","InMemoryCache","App","ApolloProvider","Navbar","exact","path","Contact","Testimonials","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87bb3d75.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profilepic.31a19adb.jpeg\";","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        email\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $username: String! $email: String!, $password: String!, $location: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, username: $username email: $email, password: $password, location: $location) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_PLANT = gql`\n  mutation addPlant($name: String!, $nickname: String, $plantType: String!, $plantSize: String!, $waterNeeded: Int!) {\n    addPlant(name: $name, nickname: $nickname, plantType: $plantType, plantSize: $plantSize, waterNeeded: $waterNeeded) {\n      _id\n      name\n      nickname\n      plantType\n      plantSize\n      waterNeeded\n    }\n  }\n`;\n\nexport const REMOVE_PLANT = gql`\n  mutation removePlant($plantId: ID!) {\n    removePlant(plantId: $plantId) {\n      _id\n      name\n      waterNeeded\n    }\n  }\n`;\n\nexport const ADD_WATER = gql`\n  mutation addWater($plantId: ID!) {\n    addWater(plantId: $plantId) {\n      _id\n      name\n      waterNeeded\n      waterAdded\n      createdAt\n    }\n  }\n`;\n\nexport const REMOVE_WATER = gql`\n  mutation removeWater($plantId: ID!, $waterAdded: Int!) {\n    removeWater(_id: $plantId, waterAdded: $waterAdded) {\n      _id\n      name\n      waterNeeded\n      waterAdded\n    }\n  }\n`;\n\nexport const ADD_POST = gql`\n  mutation addPost($postText: String!, $postCreator: String!) {\n    addPost(postText: $postText, postCreator: $postCreator) {\n      _id\n      postText\n      postCreator\n      createdAt\n      comments {\n        _id\n        commentText\n        commentCreator\n      }\n    }\n  }\n`;\n\nexport const REMOVE_POST = gql`\n  mutation removePost($postId: ID!) {\n    removePost(postId:$postId) {\n      _id\n      postText\n      postCreator\n      createdAt\n      comments {\n        _id\n        commentText\n        commentCreator\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($postId: ID!, $commentText: String!) {\n    addComment(postId: $postId, commentText: $commentText) {\n      _id\n      postText\n      postCreator\n      createdAt\n      comments {\n        _id\n        commentText\n        commentCreator\n        createdAt\n      }\n    }\n  }\n`;\nexport const REMOVE_COMMENT = gql`\n  mutation removeComment($postId: ID!, $commentId: ID!) {\n    removeComment(postId: $postId, commentId: $commentId) {\n      _id\n      postText\n      postCreator\n      createdAt\n      comments {\n        _id\n        commentText\n        commentCreator\n        createdAt\n      }\n    }\n  }\n`;","// use this to decode a token and get the user's information out of it\nimport decode from \"jwt-decode\";\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nexport default function Login({ handleSignUp, handleLoginModal }) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: \"10vh\", paddingTop: \"20vh\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          <Image src=\"./images/favicon.ico\" /> Log-in to your account\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              name=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n            <Button color=\"teal\" fluid size=\"large\" onClick={handleFormSubmit}>\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          New to us?{\" \"}\n          <div\n            onClick={() => {\n              handleLoginModal();\n              handleSignUp();\n            }}\n          >\n            Sign Up\n          </div>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Checkbox,\n} from \"semantic-ui-react\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\n\nexport default function SignUp({ handleSignUp, handleLoginModal }) {\n  const [formState, setFormState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    location: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  console.log(formState);\n\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  // handles change for input\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n      alert(e);\n    }\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: \"10vh\",  }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          <Image src=\"./images/favicon.ico\" /> Sign Up\n        </Header>\n        <Form size=\"large\" onSubmit={handleFormSubmit}>\n          <Segment stacked>\n            <Form.Field>\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"First Name\"\n                name=\"firstName\"\n                value={formState.firstName}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Last Name\"\n                name=\"lastName\"\n                value={formState.lastName}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                name=\"username\"\n                value={formState.username}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Input\n              fluid\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              name=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n            <Form.Field>\n              <Form.Input\n                fluid\n                icon=\"location arrow\"\n                iconPosition=\"left\"\n                placeholder=\"Austin, TX\"\n                name=\"location\"\n                value={formState.location}\n                onChange={handleChange}\n              />\n            </Form.Field>\n\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Re-type Password\"\n              type=\"password\"\n            />\n            <Form.Field>\n              <Checkbox label=\"I agree to the Terms and Conditions\" />\n            </Form.Field>\n\n            <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          Already a Member?{\" \"}\n          <div\n            onClick={() => {\n              handleLoginModal();\n              handleSignUp();\n            }}\n          >\n            Login\n          </div>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport \"../App.css\"\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Link } from \"react-router-dom\"\nimport profilePic from \"../pages/assets/profilepic.jpeg\";\nimport Login from \"./Login\"\nimport SignUp from \"./SignUp\"\nimport { Modal } from \"@mui/material\";\nimport Auth from '../utils/auth';\n\nconst pages = ['MyGarden', 'Forum', 'PlantFacts'];\n\n\nconst Nav = () => {\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n    const [loginToggle, setLoginToggle] = React.useState(false);\n    const [signUpToggle, setSignUpToggle] = React.useState(false);\n\n\n    const handleLoginModal = () => {\n        setLoginToggle(!loginToggle);\n    };\n\n    const handleSignUpModal = () => {\n        setSignUpToggle(!signUpToggle);\n    };\n\n    const settings = [\n        {\n            name: 'Profile',\n            callback: null,\n            routeTo: '/Profile'\n        },\n        // {\n        //     name:'Account',\n        //     callback: null,\n        // },\n        {\n            name: 'Dashboard',\n            callback: null,\n            routeTo: '/'\n        },\n        {\n            name: 'SignUp',\n            callback: handleSignUpModal,\n        },\n        {\n            name: 'Login',\n            callback: handleLoginModal,\n        },\n    ];\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n    const logout = (event) => {\n        event.preventDefault();\n        Auth.logout();\n    };\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    return <>\n        <AppBar position=\"static\" style={{ background: '#4F5902' }}>\n            <Container maxWidth=\"xl\">\n                <Toolbar disableGutters>\n                    <Link to=\"/\">\n                        <Typography\n                            variant=\"h6\"\n                            noWrap\n                            component=\"div\"\n                            sx={{ display: { xs: 'none', md: 'flex' } }}\n                        >\n                            <img id=\"logo\" src=\"./images/logo.png\" alt=\"Planthub Logo\" />\n                        </Typography>\n                    </Link>\n\n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleOpenNavMenu}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElNav}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'left',\n                            }}\n                            open={Boolean(anchorElNav)}\n                            onClose={handleCloseNavMenu}\n                            sx={{\n                                display: { xs: 'block', md: 'none' },\n                            }}\n                        >\n                            {pages.map((page) => <MenuItem key={page} onClick={handleCloseNavMenu}>\n                                <Link to={`/${page}`} >\n                                    <Typography textAlign=\"center\">{page} </Typography>\n                                </Link>\n                            </MenuItem>)}\n                        </Menu>\n                    </Box>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ flexGrow: 1, color: 'white', display: { xs: 'flex', md: 'none' } }}\n                    >\n                        <Link to=\"/\" >\n                            <img id=\"logo\" src=\"./images/logo.png\" alt=\"Planthub Logo\" />\n                        </Link>\n                    </Typography>\n                    <Box sx={{\n                        flexGrow: 1,\n                        display: { xs: 'none', md: 'flex', justifyContent: \"center\", gap: \"40px\" }\n                    }}>\n                        {pages.map((page) => <Button\n                            key={page}\n                            href={`/${page}`}\n                            onClick={handleCloseNavMenu}\n                            sx={{ fontSize: \"15px\", my: 2, color: '#EBDBAE', display: 'block' }}\n                        >\n                            {page}\n                        </Button>)}\n                    </Box>\n\n                    <Box sx={{ flexGrow: 0 }}>\n                        <Tooltip title=\"Open settings\">\n                            <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                                <Avatar alt=\"Girl with plant\" src={profilePic} />\n                            </IconButton>\n                        </Tooltip>\n                        <Menu\n                            sx={{ mt: '45px' }}\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElUser}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={Boolean(anchorElUser)}\n                            onClose={handleCloseUserMenu}\n                        >\n                            {settings.map((setting, key) => <Link to={setting.routeTo || '#'}>\n                                <MenuItem key={key} onClick={() => {\n                                    handleCloseNavMenu();\n                                    setting.callback && setting.callback()\n                                }\n                                }>\n                                    <Typography textAlign=\"center\">{setting.name}</Typography>\n\n                                </MenuItem>\n\n                            </Link>)}\n\n                            <button className=\"btn btn-lg bg-red btn-light m-2\" style={{\n                                width: \"96%\",\n                                backgroundColor: \"red\",\n                                color: \"white\",\n                                fontSize: \"18px\",\n                                margin: \"2px\",\n                                outline: \"none\",\n                                border: \"none\",\n                                borderRadius: \"13px\"\n                            }} onClick={logout}>\n                                Logout\n                            </button>\n                        </Menu>\n                    </Box>\n                </Toolbar>\n            </Container>\n        </AppBar>\n        <Modal\n            open={loginToggle}\n            onClose={handleLoginModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        >\n            <Login handleLoginModal={handleLoginModal.bind(this)}\n                handleSignUp={handleSignUpModal.bind(this)} />\n        </Modal>\n        <Modal\n            open={signUpToggle}\n            onClose={handleSignUpModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        >\n            <SignUp />\n        </Modal>\n    </>;\n};\nexport default Nav;","import React from \"react\";\nimport {\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Image,\n  List,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"../App.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => (\n  <div className=\"footer--pin\">\n    <Segment\n      inverted\n      vertical\n      style={{ margin: \"0em 0em 0em\", padding: \"0em 0em\" }}\n    >\n      <Container textAlign=\"center\">\n        <Grid divided inverted stackable>\n          <Grid.Column width={3}>\n            <Header inverted as=\"h4\" content=\"Explore\" />\n            <List link inverted>\n              <List.Item as={Link} to=\"/about\">\n                About\n              </List.Item>\n              <List.Item as={Link} to=\"/contact\">\n                Contact Support\n              </List.Item>\n              <List.Item as={Link} to=\"/testimonials\">\n                Testimonials\n              </List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={3}>\n            <Header inverted as=\"h4\" content=\"Company\" />\n            <List link inverted>\n              <List.Item as=\"a\">FAQs</List.Item>\n              <List.Item as=\"a\">Privacy</List.Item>\n              <List.Item as=\"a\">Careers</List.Item>\n              <List.Item as=\"a\">Help Center</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={3}>\n            <Header inverted as=\"h4\" content=\"Media\" />\n            <List link inverted>\n              <List.Item as=\"a\">Promotions</List.Item>\n              <List.Item as=\"a\">Ads</List.Item>\n              <List.Item as=\"a\">News Letter</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={7}>\n            <Header inverted as=\"h4\" content=\"Stay Connected\" />\n\n            <a\n              href=\"/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <i className=\"fab fa-twitter-square fa-2x footer-icons\"></i>\n            </a>\n            <a\n              href=\"/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <i className=\"fab fa-instagram-square fa-2x footer-icons\"></i>\n            </a>\n            <a href=\"/\">\n              <i className=\"fas fa-envelope-open-text fa-2x footer-icons\"></i>\n            </a>\n          </Grid.Column>\n        </Grid>\n\n        <Divider inverted section />\n        <Image centered size=\"small\" src=\"./images/logo.png\" />\n        <List horizontal inverted divided link size=\"small\">\n          <List.Item as=\"a\" href=\"#\">\n            Site Map\n          </List.Item>\n          <List.Item as=\"a\" href=\"#\">\n            Contact Us\n          </List.Item>\n          <List.Item as=\"a\" href=\"#\">\n            Terms and Conditions\n          </List.Item>\n          <List.Item as=\"a\" href=\"#\">\n            Privacy Policy\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  </div>\n);\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/vines.0fa291e7.jpeg\";","import React from \"react\";\nimport aboutImage from \"./assets/vines.jpeg\";\n\nexport default function About() {\n  return (\n    <>\n      <img className=\"about-img\" src={aboutImage} alt={\"vines\"} />\n      <div className=\"about-container \" style={{ display: \"flex\" }}>\n        <h2 style={{ fontFamily: \"Oswald, sans-serif\" }}>ABOUT US</h2>\n        <p\n          className=\"about-child\"\n          style={{ display: \"flex\", flexWrap: \"wrap\", marginBottom: \"20px\" }}\n        >\n          Welcome to PlantHub! Your number one tool to help keep your plants\n          alive and thriving. We're dedicated to providing you the best platform\n          to track your plants needs. We hope you enjoy our services as much as\n          we enjoy offering them to you.\n          <br></br>\n          Sincerely,<br></br>\n          PlantHub\n        </p>\n      </div>\n    </>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      firstName\n      lastName\n      email\n      location\n      createdAt\n      myPlants {\n        _id\n        name\n        nickname\n        plantType\n        plantSize\n        waterNeeded\n        waterAdded\n        createdAt\n      }\n    }\n  }\n`;\nexport const QUERY_POSTS = gql`\n  query {\n    allPosts {\n      _id\n      postText\n      postCreator\n      createdAt\n      comments {\n        _id\n        createdAt\n        commentText\n        commentCreator\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Checkbox,\n  Modal\n} from \"semantic-ui-react\";\nimport { ADD_PLANT } from \"../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\n\nfunction SizeChartModal() {\n  const [open, setOpen] = React.useState(false)\n\n\n  return (\n    <Modal\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size='small'\n      trigger={<Button>Size Chart</Button>}\n    >\n      <Header>\n        Size Chart\n      </Header>\n      <Modal.Content>\n      <Grid columns='equal'>\n    <Grid.Column>\n      <h2>small</h2>\n      <p>These plants are suitable for use on a desk or on a shelf. Depending on the variety of plant you acquire, they are normally 5 to 15 inches tall.</p>\n    </Grid.Column>\n    <Grid.Column>\n      <h2>medium</h2>\n      <p>Medium plants are larger than those seen on a desk or shelf. They are usually 1-2 feet tall and have a larger presence.</p>\n    </Grid.Column>\n    <Grid.Column>\n      <h2>large</h2>\n      <p>Although some may fit on a desktop or perhaps a shelf, these are perfect  floor plants. Depending on the variety of plant you've chosen, they can grow to be anywhere from 3 to 7 feet tall.</p>\n    </Grid.Column>\n  </Grid>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='green' inverted onClick={() => setOpen(false)}>\n          Cool\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default function AddPlantForm({ handlePlantModal, handleLoginModal }) {\n  const [plantState, setPlantState] = useState({\n    name: \"\",\n    nickname: \"\",\n    plantType: \"\",\n    plantSize: \"\",\n    waterNeeded: 15,\n  });  \n\n  const [addPlant, { error, data }] = useMutation(ADD_PLANT);\n\n  // handles change for input\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setPlantState({\n      ...plantState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n   \n\n    try {\n      const { data } = await addPlant({\n        variables: { ...plantState },\n      });\n\n      // Auth.login(data.addUser.token);\n    } catch (e) {\n    }\n  };\n\n  return (\n    <Grid>\n      <Grid.Column >\n        <Header as=\"h2\" textAlign=\"center\" id='addPlantHead'>\n          Add a plant \n        </Header>\n        <Form size=\"large\" onSubmit={handleFormSubmit}>\n          <Segment stacked>\n            <Form.Field>\n              <Form.Input\n                fluid\n                label='Plant Name'\n                placeholder=\"Sunflower\"\n                name=\"name\"\n                value={plantState.name}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Form.Input\n                fluid\n                label='Nickname'\n                placeholder=\"Sunny\"\n                name=\"nickname\"\n                value={plantState.nickname}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Form.Input\n                fluid\n                label='Plant type'\n                placeholder=\"Indoor or Outdoor\"\n                name=\"plantType\"\n                value={plantState.plantType}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field >\n            <Form.Input\n              fluid\n              label='Plant Size'\n              placeholder=\"'S' for small, 'M' for medium, 'L' for large\"\n              name=\"plantSize\"\n              value={plantState.plantSize}\n              onChange={handleChange}\n            />\n            <SizeChartModal />\n            </Form.Field>\n            <Form.Field> \n              <Form.Input\n                fluid\n               label='Enter, in digits, how many days per month your plant requires water. Every other day by default.'\n                placeholder=\"How many days per month should you water it?\"\n                name=\"waterNeeded\"\n                value={plantState.waterNeeded}\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Button fluid size=\"large\" type=\"submit\">\n              Add Plant\n            </Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Progress,\n  Button,\n  Icon,\n  Table,\n  Segment,\n  Grid,\n  List,\n  Modal,\n} from \"semantic-ui-react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport { ADD_WATER, REMOVE_PLANT } from \"../utils/mutations\";\nimport AddPlantForm from \"../components/AddPlant\";\nimport Auth from \"../utils/auth\";\n\nexport default function MyGarden() {\n  const { loading, data, refetch } = useQuery(QUERY_ME);\n\n  const [addWater, { error }] = useMutation(ADD_WATER);\n\n  const [removePlant, { err }] = useMutation(REMOVE_PLANT);\n\n  const [plantToggle, setPlantToggle] = React.useState(false);\n\n  const handlePlantModal = () => {\n    setPlantToggle(!plantToggle);\n    refetch()\n  };\n\n  const plantData = data?.me.myPlants || [];\n\n  const userData = data?.me || [];\n\n  const [percent, setPercent] = useState(0);\n  const [plantCount, setPlantCount] = useState(0);\n  const [username, setUsername] = useState(\"\");\n  const [plantForm, setPlantForm] = useState(\"\");\n\n  const handleAddWater = async (plantId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    console.log(\"PlantID:\" + plantId);\n    try {\n      const { plantData } = await addWater({\n        variables: { plantId },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleDeletePlant = async (plantId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { plantData } = await removePlant({\n        variables: { plantId },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      let newPercent = plantData.map((plant, i) => {\n        let x = plant.waterAdded;\n        let y = plant.waterNeeded;\n        return ((x / y) * 100).toFixed();\n      });\n      setPercent(newPercent);\n      setPlantCount(plantData.length);\n      setUsername(userData.username);\n    }\n  }, [data, plantData, userData]);\n\n  return (\n    <>\n      <div style={{ backgroundColor: \"#EBDBAE\" }}></div>\n      <div className=\"garden-container\">\n        {Auth.loggedIn() ? (\n          <>\n            <br></br>\n            <div style={{ width: \"100%\" }}>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"center\",\n                  p: 2,\n                  m: 1,\n                }}\n              >\n                <Grid stackable columns={1}>\n                  <Grid.Column textAlign=\"center\" width={16}>\n                    <Typography\n                      gutterBottom\n                      variant=\"h4\"\n                      component=\"div\"\n                      style={{\n                        textAlign: \"center\",\n                        fontFamily: \"Oswald, sans-serif\",\n                        color: \"#EBDBAE\",\n                      }}\n                    >\n                      Hello {username}, welcome to your garden\n                    </Typography>\n                  </Grid.Column>\n                  <Grid.Column\n                    width={16}\n                    textAlign=\"center\"\n                    className=\"plantTable\"\n                    style={{ backgroundColor: \"#EBDBAE\" }}\n                  >\n                    <Table compact celled>\n                      <Table.Header>\n                        <Table.Row>\n                          <Table.HeaderCell>\n                            <Typography\n                              gutterBottom\n                              variant=\"h5\"\n                              component=\"div\"\n                              style={{\n                                textAlign: \"center\",\n                                fontFamily: \"Fuzzy Bubbles, cursive\",\n                                color: \"#4f5902\",\n                              }}\n                            >\n                              Plant\n                            </Typography>\n                          </Table.HeaderCell>\n                          <Table.HeaderCell>\n                            <Typography\n                              gutterBottom\n                              variant=\"h5\"\n                              component=\"div\"\n                              style={{\n                                textAlign: \"center\",\n                                fontFamily: \"Fuzzy Bubbles, cursive\",\n                                color: \"#4f5902\",\n                              }}\n                            >\n                              Nickname\n                            </Typography>\n                          </Table.HeaderCell>\n                          <Table.HeaderCell>\n                            <Typography\n                              gutterBottom\n                              variant=\"h5\"\n                              component=\"div\"\n                              style={{\n                                textAlign: \"center\",\n                                fontFamily: \"Fuzzy Bubbles, cursive\",\n                                color: \"#4f5902\",\n                              }}\n                            >\n                              Hydration Status\n                            </Typography>\n                          </Table.HeaderCell>\n                          <Table.HeaderCell>\n                            <Typography\n                              gutterBottom\n                              variant=\"h5\"\n                              component=\"div\"\n                              style={{\n                                textAlign: \"center\",\n                                fontFamily: \"Fuzzy Bubbles, cursive\",\n                                color: \"#4f5902\",\n                              }}\n                            >\n                              Water\n                            </Typography>\n                          </Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Header>\n\n                      <Table.Body>\n                        {plantData.map((plant, i) => (\n                          <Table.Row>\n                            <Table.Cell>\n                              {\" \"}\n                              <Typography\n                                variant=\"body2\"\n                                color=\"#4f5902\"\n                                align=\"center\"\n                              >\n                                {plant.name}\n                              </Typography>\n                            </Table.Cell>\n                            <Table.Cell>\n                              {\" \"}\n                              <Typography\n                                variant=\"body2\"\n                                color=\"#4f5902\"\n                                align=\"center\"\n                              >\n                                {plant.nickname}\n                              </Typography>\n                            </Table.Cell>\n                            <Table.Cell>\n                              <Progress\n                                percent={percent[i]}\n                                color=\"blue\"\n                                active\n                              >\n                                <Typography variant=\"body2\" color=\"#4f5902\">\n                                  {percent[i]}% watered this month\n                                </Typography>\n                              </Progress>\n                            </Table.Cell>\n                            <Table.Cell>\n                              <div align=\"center\">\n                                <Button\n                                  compact\n                                  id={plant.name}\n                                  icon\n                                  labelPosition=\"right\"\n                                  primary\n                                  size=\"small\"\n                                  onClick={async () => {\n                                    await handleAddWater(plant._id);\n                                    await refetch();\n                                  }}\n                                >\n                                  <Icon name=\"tint\" />\n                                  <Typography\n                                    align=\"center\"\n                                    variant=\"body2\"\n                                    color=\"white\"\n                                  >\n                                    Add Water\n                                  </Typography>\n                                </Button>\n                              </div>\n                            </Table.Cell>\n                          </Table.Row>\n                        ))}\n                      </Table.Body>\n\n                      <Table.Footer fullWidth>\n                        <Table.Row>\n                          <Table.HeaderCell />\n                          <Table.HeaderCell colSpan=\"8\">\n                            <Segment textAlign=\"right\">\n                              <Typography variant=\"body1\" color=\"#4f5902\">\n                                You have {plantCount} plants in your garden{\" \"}\n                              </Typography>\n                            </Segment>\n                          </Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Footer>\n                    </Table>\n                  </Grid.Column>\n                </Grid>\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"center\",\n                  p: 2,\n                  m: 1,\n                }}\n              >\n                <Grid stackable columns={1} width={16} justifyContent=\"center\">\n                  <Grid.Column textAlign=\"center\" width={16}>\n                    <Typography\n                      gutterBottom\n                      variant=\"h4\"\n                      component=\"div\"\n                      style={{\n                        textAlign: \"center\",\n                        fontFamily: \"Oswald, sans-serif\",\n                        color: \"#EBDBAE\",\n                      }}\n                    >\n                      Manage your Garden\n                    </Typography>\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"center\" width={16}>\n                    {plantForm}\n                  </Grid.Column>\n                  <Grid.Column\n                    textAlign=\"center\"\n                    justifyContent=\"center\"\n                    width={16}\n                  >\n                    <div justifyContent=\"center\" style={{ margin: 0 }}>\n                      <div style={{ textAlign: \"center\" }}>\n                        <Button\n                          className=\"addplantbtn\"\n                          icon\n                          labelPosition=\"left\"\n                          primary\n                          size=\"small\"\n                          style={{ backgroundColor: \"#EBDBAE\" }}\n                          onClick={(e) => {\n                            handlePlantModal(e);\n                          }}\n                        >\n                          <Icon color=\"#4f5902\" name=\"remove circle\" />\n                          <Typography variant=\"body1\" color=\"#4f5902\">\n                            Add Plant To Garden\n                          </Typography>\n                        </Button>\n                      </div>\n                    </div>\n                  </Grid.Column>\n                  {plantData.map((plant, i) => (\n                    <Grid.Column\n                      textAlign=\"center\"\n                      mobile={16}\n                      tablet={8}\n                      computer={4}\n                    >\n                      <Card\n                        id=\"plant-card\"\n                        sx={{ maxWidth: 345, minWidth: 232, margin: 1, bgcolor: \"#EBDBAE\" }}\n                      >\n                        <CardActionArea>\n                          <CardMedia\n                            component=\"img\"\n                            height=\"200\"\n                            image=\"./images/money-tree.webp\"\n                            alt={plant.name}\n                            style={{ backgroundColor: \"#4f5902\" }}\n                          />\n                          <CardContent>\n                            <Typography\n                              gutterBottom\n                              variant=\"h4\"\n                              component=\"div\"\n                              style={{\n                                textAlign: \"center\",\n                                fontFamily: \"Fuzzy Bubbles, cursive\",\n                                color: \"4f5902\",\n                              }}\n                            >\n                              {plant.nickname}\n                            </Typography>\n                            <List>\n                              <List.Item>\n                                {\" \"}\n                                <Typography variant=\"body1\" color=\"4f5902\">\n                                  Type: {plant.plantType}\n                                </Typography>\n                              </List.Item>\n                              <List.Item>\n                                {\" \"}\n                                <Typography variant=\"body1\" color=\"4f5902\">\n                                  Birthday: {plant.createdAt}\n                                </Typography>\n                              </List.Item>\n                              <List.Item>\n                                {\" \"}\n                                <Typography variant=\"body1\" color=\"4f5902\">\n                                  Size: {plant.plantSize}\n                                </Typography>\n                              </List.Item>\n                              <List.Item>\n                                {\" \"}\n                                <Typography variant=\"body1\" color=\"4f5902\">\n                                  Days watered this month: {plant.waterAdded}\n                                </Typography>\n                              </List.Item>\n                            </List>\n\n                            <div style={{ textAlign: \"center\" }}>\n                              <Button\n                                className=\"removegardenbtn\"\n                                icon\n                                labelPosition=\"left\"\n                                primary\n                                size=\"small\"\n                                style={{ backgroundColor: \"#4f5902\" }}\n                                onClick={async () => {\n                                  await handleDeletePlant(plant._id);\n                                  await refetch();\n                                }}\n                              >\n                                <Icon name=\"remove circle\" />\n                                <Typography variant=\"body1\" color=\"white\">\n                                  Remove from Garden\n                                </Typography>\n                              </Button>\n                            </div>\n                          </CardContent>\n                        </CardActionArea>\n                      </Card>\n                    </Grid.Column>\n                  ))}\n                </Grid>\n              </Box>\n            </div>\n          </>\n        ) : (\n          <div className=\"content-container\">\n            <Grid stackable columns={1}>\n              <Grid.Column textAlign=\"center\" width={16}>\n                <Typography\n                  gutterBottom\n                  variant=\"h4\"\n                  component=\"div\"\n                  style={{\n                    textAlign: \"center\",\n                    fontFamily: \"Oswald, sans-serif\",\n                    color: \"#EBDBAE\",\n                  }}\n                >\n                  You Must Make an Account to Manage your Garden\n                </Typography>\n              </Grid.Column>\n            </Grid>\n          </div>\n        )}\n      </div>\n      <Modal\n        open={plantToggle}\n        onClose={handlePlantModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <AddPlantForm />\n      </Modal>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hangingpots.7ebf8ce1.jpeg\";","import React from \"react\";\nimport homeImage from \"./assets/hangingpots.jpeg\";\nimport \"../App.css\";\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n  Image,\n  Segment,\n} from \"semantic-ui-react\";\n\nconst Home = () => (\n  <Segment style={{ padding: \"0em 0em 5em\" }} vertical>\n    <Image className=\"homeimg\" src={homeImage} alt={\"hanging flower pots\"} />\n\n    <Grid\n      container\n      stackable\n      verticalAlign=\"middle\"\n      style={{ padding: \"6em 0em\" }}\n    >\n      <Grid.Row>\n        <Grid.Column width={8}>\n          <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n            Five Tip & Tricks for your house plants!\n          </Header>\n          <p style={{ fontSize: \"1.33em\" }}>\n            Spin your plants around so they grow evenly and not lopsided. Every\n            week.\n          </p>\n          <p style={{ fontSize: \"1.33em\" }}>\n            Don’t fertilize in the winter. Only in the spring and summer.\n          </p>\n          <p style={{ fontSize: \"1.33em\" }}>\n            Use pots with holes in them. Very helpful and necessary if you are a\n            gardening newbie.\n          </p>\n          <p style={{ fontSize: \"1.33em\" }}>\n            Try taking your houseplants outside for the summer and grow them in\n            the shade. It is amazing how much they grow!\n          </p>\n          <p style={{ fontSize: \"1.33em\" }}>\n            If you are prone to giving to watering too much, buy a moisture\n            meter. It will help you learn how much water your plant needs.\n          </p>\n        </Grid.Column>\n        <Grid.Column floated=\"right\" width={6}>\n          <Image\n            bordered\n            rounded\n            size=\"large\"\n            src=\"/images/dogwithplant.jpeg\"\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    <Container text style={{ marginBottom: \"80px\" }}>\n      <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n        Did you Know?\n      </Header>\n      <p style={{ fontSize: \"1.33em\" }}>\n        If your potted houseplants dry out too quickly after watering, try this\n        simple trick for keeping the soil moist longer. When repotting, tuck a\n        damp sponge into the bottom of the pot before filling with soil. It will\n        act as a water reservoir and may help prevent a gusher if you\n        accidentally overwater.\n      </p>\n      <Button href=\"/PlantFacts\" size=\"large\">\n        Read More About Plant Facts!\n      </Button>\n    </Container>\n    <Grid celled=\"internally\" columns=\"equal\" stackable>\n      <Grid.Row textAlign=\"center\">\n        <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n          <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n            \"We Love how all of our house plants are all in one location! Makes\n            watering much easier!\"\n          </Header>\n        </Grid.Column>\n        <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n          <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n            \"Loved every minute of using PlantHub!\"\n          </Header>\n          <p style={{ fontSize: \"1.33em\" }}>\n            <Image avatar src=\"./images/favicon.ico\" />\n            <b>Jen</b> Member since 2021\n          </p>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Column\n        textAlign=\"center\"\n        href=\"/MyGarden\"\n        style={{ marginTop: \"30px\" }}\n      >\n        <Button size=\"huge\">Check Out Your Garden</Button>\n      </Grid.Column>\n    </Grid>\n  </Segment>\n);\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Form, Button, Modal, Grid, Header } from \"semantic-ui-react\";\n\nconst options = [\n  { key: \"i\", text: \"Indoor\", value: \"indoor\" },\n  { key: \"o\", text: \"Outdoor\", value: \"outdoor\" },\n];\nfunction SizeChartModal() {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <Modal\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size='small'\n      trigger={<Button>Size Chart</Button>}    >\n      <Header>\n        Size Chart\n      </Header>\n      <Modal.Content>\n        <Grid columns=\"equal\">\n          <Grid.Column>\n            <h2>small</h2>\n            <p>\n              These plants are suitable for use on a desk or on a shelf.\n              Depending on the variety of plant you acquire, they are normally 5\n              to 15 inches tall.\n            </p>\n          </Grid.Column>\n          <Grid.Column>\n            <h2>medium</h2>\n            <p>\n              Medium plants are larger than those seen on a desk or shelf. They\n              are usually 1-2 feet tall and have a larger presence.\n            </p>\n          </Grid.Column>\n          <Grid.Column>\n            <h2>large</h2>\n            <p>\n              Although some may fit on a desktop or perhaps a shelf, these are\n              perfect  floor plants. Depending on the variety of plant you've\n              chosen, they can grow to be anywhere from 3 to 7 feet tall.\n            </p>\n          </Grid.Column>\n        </Grid>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"green\" inverted onClick={() => setOpen(false)}>\n          Cool\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nclass AddPlantForm extends Component {\n  state = {};\n  handleChange = (e, { value }) => this.setState({ value });\n  render() {\n    const { value } = this.state;\n    return (\n      <div id=\"PlantFormCont\">\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.Input fluid label=\"Plant Name\" placeholder=\"Sunflower\" />\n            <Form.Input fluid label=\"Nickname\" placeholder=\"Sunny\" />\n            <Form.Select\n              fluid\n              label=\"Plant Type\"\n              options={options}\n              placeholder=\"Indoor or Outdoor\"\n            />\n          </Form.Group>\n          <Form.Group inline>\n            <label>Size</label>\n            <Form.Radio\n              label=\"Small\"\n              value=\"s\"\n              checked={value === \"s\"}\n              onChange={this.handleChange}\n            />\n            <Form.Radio\n              label=\"Medium\"\n              value=\"m\"\n              checked={value === \"m\"}\n              onChange={this.handleChange}\n            />\n            <Form.Radio\n              label=\"Large\"\n              value=\"l\"\n              checked={value === \"l\"}\n              onChange={this.handleChange}\n            />\n            <SizeChartModal />\n          </Form.Group>\n          <Form.Input\n            fluid\n            label=\"Days of Water Needed Per Month\"\n            placeholder=\"18\"\n          />\n          <Form.Button>Submit</Form.Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddPlantForm;\n","\nimport React from 'react'\nimport { Header,  Grid, Segment, Button, Form } from 'semantic-ui-react'\n\n\nconst HeaderExampleUsersIcon = () => (\n  <>\n    <div className=\"contact-container\">\n      <Header as=\"h2\" icon textAlign=\"center\">\n        <Header.Content\n          style={{\n            fontFamily: \"Oswald, sans-serif\",\n            color: \"white\",\n            fontSize: \"40px\",\n            paddingTop: \"20px\",\n          }}\n        >\n          Contact Us\n        </Header.Content>\n      </Header>\n      <div id=\"ContactContainer\">\n        <Grid stackable columns={2}>\n          <Grid.Column>\n            <Segment>\n              <p id=\"ContactPar\">\n                We'd love to hear from you. If you have any questions, please\n                fill out the contact form, and we will get back to you as soon\n                as possible.{\" \"}\n              </p>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment>\n              <Form>\n                <Form.Field>\n                  <Form.Input\n                    icon=\"user\"\n                    iconPosition=\"left\"\n                    placeholder=\"First Name\"\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <Form.Input\n                    icon=\"mail\"\n                    iconPosition=\"left\"\n                    placeholder=\"Email\"\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <Form.Input\n                    icon=\"mail outline\"\n                    iconPosition=\"left\"\n                    placeholder=\"Your Message\"\n                  />\n                </Form.Field>\n                <Button color=\"olive\" type=\"submit\">\n                  Send\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    </div>\n  </>\n);\n\nexport default HeaderExampleUsersIcon;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport { display } from \"@mui/system\";\n\nexport default function Team() {\n  return (\n    <>\n      <div className=\"team-container\">\n      <h2 style={{fontFamily:'Oswald, sans-serif', marginLeft:'20px', color: '#d9cba0'}}>The People</h2>\n      <br></br>\n      <div style={{ width: '100%' }}>\n      <Box sx={{ display: 'flex',flexWrap:'wrap', justifyContent: 'center', p: 1, m: 1}}>\n    <Card id='team-card' sx={{ maxWidth: 345, margin: 1, bgcolor:'#d9cba0'}}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          height=\"300\"\n          image=\"./images/christa_portfolio_pic.png\"\n          alt=\"christa\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\" style={{ textAlign: 'center' , fontFamily: 'Fuzzy Bubbles, cursive'}}>\n        Christa Baccas\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n               Hello, \n                My name is Christa Baccas, I'm 28 years old living in Austin, TX. With 3 years of experience in the technology field, I began the journey of becoming a web/software developer. Well versed in HTML, CSS/BootStrap, JavaScript, Databases, Node.js, and React. I have a passion for problem-solving and learning new things.\n          </Typography>\n          <div style={{ textAlign:'center'}}>\n          <a href='https://www.linkedin.com/in/christa-baccas-77362a205/' target='_blank' rel='noreferrer'><i className=\"fab fa-linkedin footer-icons\"></i></a>\n          <a href='https://github.com/christa-baccas' target='_blank' rel='noreferrer'><i className=\"fab fa-github footer-icons\"></i></a>\n          <a href='mailto:christa-baccas@gmail.com' rel='noreferrer'><i className=\"fas fa-envelope footer-icons\"></i></a> \n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n    <Card id='team-card' sx={{ maxWidth: 345, margin: 1 ,bgcolor:'#d9cba0'}}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          height=\"300\"\n          image=\"./images/ismeny-profile-chicago.jpg\"\n          alt=\"ismeny\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\" style={{ textAlign: 'center', fontFamily: 'Fuzzy Bubbles, cursive'}}>\n          Ismeny Castro\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n          Hello! \n          My name is Ismeny Castro, I'm born and raised in Austin, Texas. \n          I love doing outdoor activites like going to the Greenbelt, paddleboarding on Town Lake, and picnics at Zilker Park with my dogs and friends. \n          I'm new to the tech field and excited to learn more about web development and pursue a career as a Full Stack MERN Developer.\n          </Typography>\n          <div style={{ textAlign:'center'}}>\n          <a href='https://www.linkedin.com/in/ismeny-castro-b8b32821b/' target='_blank' rel='noreferrer'><i className=\"fab fa-linkedin footer-icons\"></i></a>\n          <a href='https://github.com/Ismeny' target='_blank' rel=\"noreferrer\"><i className=\"fab fa-github footer-icons\"></i></a>\n          <a href='mailto:menysag2@gmail.com' rel=\"noreferrer\"><i className=\"fas fa-envelope footer-icons\"></i></a> \n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n    <Card id='team-card' sx={{ maxWidth: 345, margin: 1, bgcolor:'#d9cba0'}}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          height=\"300\"\n          image=\"./images/jayla-profile.jpg\"\n          alt=\"jayla\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\" style={{ textAlign: 'center', fontFamily: 'Fuzzy Bubbles, cursive'}}>\n          Jayla Newton\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" >\n            Hi, i'm Jayla!\n          I'm a Full Stack MERN Developer and new to the tech industry. I'm eager to learn more about front-end development and how to create amazing user experiences. My projects on my portfolio demonstrate my skills. Check out my Github and feel free to contact me, let’s build something great!\n          </Typography>\n          <div style={{ textAlign:'center' }}>\n          <a href='https://www.linkedin.com/in/jaylanewton/' target='_blank' rel='noreferrer'><i className=\"fab fa-linkedin footer-icons\"></i></a>\n          <a href='https://github.com/jayladenae' target='_blank' rel=\"noreferrer\"><i className=\"fab fa-github footer-icons\"></i></a>\n          <a href='mailto:jayladenaer@gmail.com'><i className=\"fas fa-envelope footer-icons\" rel=\"noreferrer\"></i></a> \n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n    <Card id='team-card' sx={{ maxWidth: 345, margin: 1, bgcolor:'#d9cba0'}}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          height=\"300\"\n          image=\"./images/alex-profile-pic2.jpg\"\n          alt=\"alex\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\" style={{ textAlign: 'center', fontFamily: 'Fuzzy Bubbles, cursive'}}>\n            Alex Gonzalez\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n          🔭 I’m currently working on finding employment as an entry-level junior developer\n\n🌱 I’m currently learning how to create and deploy a full-stack application using the MERN stack\n👯 I’m looking to collaborate on exciting applications meant to meet real world needs\n💬 Ask me about why I started investing in crypto and where I see myself in 10 years\n😄 Pronouns: He/him\n⚡ Fun fact: I love soccer, basketball, and competitive Call of Duty.\n          </Typography>\n          <div style={{ textAlign:'center'}}>\n          <a href='https://www.linkedin.com/in/alexis-gonzalez-07/' target='_blank' rel='noreferrer'><i className=\"fab fa-linkedin footer-icons\"></i></a>\n          <a href='https://github.com/AlexisGonzalez07' target='_blank' rel=\"noreferrer\"><i className=\"fab fa-github footer-icons\"></i></a>\n          <a href='mailto:alexis.gonzalez07@gmail.com'><i className=\"fas fa-envelope footer-icons\" rel=\"noreferrer\"></i></a> \n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n    <Card  id='team-card' sx={{ maxWidth: 345 , margin: 1, bgcolor:'#d9cba0'}}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          height=\"300\"\n          image=\"./images/nikki-profile-pic.jpg\"\n          alt=\"nikki\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\" style={{ textAlign: 'center', fontFamily: 'Fuzzy Bubbles, cursive'}}>\n           Nicole Dodge\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Hey I’m Nicole! (some people call me Nikki)\n            I’m new to the world of web development but have been no stranger to technology. Expertised in DSLR camera processes and Adobe applications, my profession prior to computers involved Wedding & Festival Photography, as well as the team photographer for a Division I football team. I spend most of my time at festivals and traveling across different national parks and different countries!\n          </Typography>\n          <div style={{ textAlign:'center'}}>\n          <a href='https://www.linkedin.com/in/nicole-dodge5/' target='_blank' rel='noreferrer'><i className=\"fab fa-linkedin footer-icons\"></i></a>\n          <a href='https://github.com/nicoledodge' target='_blank' rel=\"noreferrer\"><i className=\"fab fa-github footer-icons\"></i></a>\n          <a href='mailto:nicoledodge5@gmail.com'><i className=\"fas fa-envelope footer-icons\" rel=\"noreferrer\"></i></a> \n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n    </Box>\n    </div>\n    </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_COMMENT } from \"../utils/mutations\";\nimport { Button, Header, Icon, Modal, Form } from \"semantic-ui-react\";\nimport Auth from \"../utils/auth\";\n\nconst ReplyModal = (props) => {\n  const [open, setOpen] = useState(false);\n  const [commentText, setCommentText] = useState(\"\");\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleReplySubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          postId: props.postId,\n          commentText: commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText(\"\");\n      setOpen(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"commentText\") {\n      setCommentText(value);\n    }\n  };\n  return (\n    <Modal\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size=\"tiny\"\n      trigger={<a>Reply</a>}\n    >\n      <Header icon>\n        <Icon name=\"reply\" />\n        Add Reply Here\n      </Header>\n      {Auth.loggedIn() ? (\n        <>\n          <Modal.Content>\n            <Form reply>\n              <Form.TextArea\n                name=\"commentText\"\n                placeholder=\"Enter comment...\"\n                value={commentText}\n                onChange={handleChange}\n              />\n            </Form>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button basic color=\"red\" inverted onClick={() => setOpen(false)}>\n              <Icon name=\"remove\" /> Close\n            </Button>\n            <Button color=\"green\" inverted onClick={handleReplySubmit}>\n              <Icon name=\"checkmark\" /> Reply\n            </Button>\n          </Modal.Actions>\n        </>\n      ) : (\n        <p>You need to be logged in to add a comment</p>\n      )}\n    </Modal>\n  );\n};\n\nexport default ReplyModal;\n","import React, { useState } from \"react\";\nimport ReplyModal from \"./ReplyModal\";\n\nconst ReplyComment = (props) => {\n  const [replyBox, setReplyBox] = useState(false);\n  const replyButton = async (e) => {\n    e.preventDefault();\n    setReplyBox(true);\n  };\n\n  return (\n    <div class=\"actions\">\n      <ReplyModal onClick={replyButton} postId={props.postId}>\n        Reply\n      </ReplyModal>\n    </div>\n  );\n};\n\nexport default ReplyComment;\n","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\n\nclass Likes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      likes: 0,\n      updated: false,\n    };\n  }\n\n  updateLikes = () => {\n    if (!this.state.updated) {\n      this.setState((prevState, props) => {\n        return {\n          likes: prevState.likes + 1,\n          updated: true,\n        };\n      });\n    } else {\n      this.setState((prevState, props) => {\n        return {\n          likes: prevState.likes - 1,\n          updated: false,\n        };\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <p onClick={this.updateLikes}>\n          <Icon name=\"like\" />\n        </p>\n        <p>{this.state.likes}</p>\n      </div>\n    );\n  }\n}\n\nexport default Likes;\n","const facts = [\n  {\n    fact: \"Latest scientific studies suggest that juice extracted from the purple-colored type of grape known as Concord, can prevent development of breast cancer.\",\n  },\n  {\n    fact: \"Extract of witch hazel twigs combined with alcohol, known under the trade name hamamelis water, originates from the 19th century. This product is still used in treatment of skin disorders and varicose veins.\",\n  },\n  {\n    fact: \"Buckwheat is an annual plant which means that it completes its life cycle in one year.\",\n  },\n  {\n    fact: \"Sweet flag blooms from May to July. Flowers contains both types of reproductive organs. They attract insects, responsible for the pollination of this plant.\",\n  },\n  {\n    fact: \"Animals such as birds, insects and butterflies consume nectar or seed of dandelion.\",\n  },\n  {\n    fact: \"Due to high specialization of pollination, extinction of insect means extinction of orchid (there is no one else who can pollinate it in the wild).\",\n  },\n  {\n    fact: \"Giant hogweed is perennial plant that can survive from 5 to 7 years in the wild.\",\n  },\n  {\n    fact: \"Allspice grows in the form of large shrub or small tree that can reach 32 to 60 feet in height. \",\n  },\n];\n\nexport default facts;\n","import React from \"react\";\nimport { Comment, Feed, Button, Icon } from \"semantic-ui-react\";\nimport ReplyComment from \"./ReplyComment\";\nimport Likes from \"./Likes\";\nimport facts from \"../pages/FactsDB\";\n\nconst FeedExampleBasic = (props) => (\n  <Feed>\n    {props.allPost.map((post) => (\n      <Feed.Event>\n        <Feed.Label>\n          <img src=\"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\" />\n        </Feed.Label>\n        <Feed.Content>\n          <Feed.Summary>\n            <Feed.User style={{ color: \"rgba(79,89,2,0.93)\" }}>\n              {post.postCreator}\n            </Feed.User>\n            <Feed.Date>{post.createdAt}</Feed.Date>\n          </Feed.Summary>\n          <Feed.Extra text>\n            <p> {post.postText}</p>\n          </Feed.Extra>\n          <Comment.Group>\n            {post.comments.map((comment) => (\n              <Comment key={`comment = ${comment._id}`}>\n                <Comment.Avatar\n                  as=\"a\"\n                  src=\"https://react.semantic-ui.com/images/avatar/small/helen.jpg\"\n                />\n                <Comment.Content>\n                  <Comment.Author as=\"a\">\n                    {comment.commentCreator}\n                  </Comment.Author>\n                  <Comment.Metadata>\n                    <span>{comment.createdAt}</span>\n                  </Comment.Metadata>\n                  <Comment.Text>{comment.commentText}</Comment.Text>\n                  <Comment.Actions>\n                    {/* <ReplyComment commentId={comment._id} /> */}\n                  </Comment.Actions>\n                </Comment.Content>\n              </Comment>\n            ))}\n          </Comment.Group>\n          <Feed.Meta style={{ display: \"flex\", flexDirection: \"row\", float: 'left' }}>\n            <Feed.Like>\n              <Likes />\n            </Feed.Like>\n            {/*<Comment.Actions>*/}\n            <ReplyComment postId={post._id} />\n            {/*</Comment.Actions>*/}\n          </Feed.Meta>\n          <Feed.Meta style={{ display: \"flex\", flexDirection: \"row\", justifyContent:'center' }}>\n\n              <Button circular color='facebook' icon='facebook'\n                      className=\"ml-3\"\n                      onClick={() => {\n                        // generateRandomFact(facts);\n                        window.open(\n                            \"http://www.facebook.com/sharer/sharer.php\" +\n                            encodeURIComponent(post.postText)\n                        );\n                      }}\n                      type=\"submit\"/>\n\n              <Button circular color='twitter' icon='twitter'\n                      className=\"ml-3\"\n                      onClick={() => {\n                        // generateRandomFact(facts);\n                        window.open(\n                            \"https://twitter.com/intent/tweet/?text=\" +\n                            encodeURIComponent(post.postText)\n                        );\n                      }}\n                      type=\"submit\"/>\n              <Button circular color='linkedin' icon='linkedin'\n                      className=\"ml-3\"\n                      onClick={() => {\n                        // generateRandomFact(facts);\n                        window.open(\n                            \"https://www.linkedin.com/shareArticle?\" +\n                            encodeURIComponent(post.postText)\n                        );\n                      }}\n                      type=\"submit\"/>\n              <Button circular color='google plus' icon='google plus'\n                      className=\"ml-3\"\n                      onClick={() => {\n                        // generateRandomFact(facts);\n                        window.open(\n                            \"https://twitter.com/intent/tweet/?text=\" +\n                            encodeURIComponent(post.postText)\n                        );\n                      }}\n                      type=\"submit\"/>\n          </Feed.Meta>\n        </Feed.Content>\n      </Feed.Event>\n    ))}\n  </Feed>\n);\n\nexport default FeedExampleBasic;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_POST } from \"../utils/mutations\";\nimport { QUERY_POSTS } from \"../utils/queries\";\nimport { Form, Button } from \"semantic-ui-react\";\n\nimport Auth from \"../utils/auth\";\n\nconst AddComment = (props) => {\n  const [postText, setPostText] = useState(\"\");\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      try {\n        const posts = cache.readQuery({ query: QUERY_POSTS });\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: {\n            posts: [...posts, addPost],\n          },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addPost({\n        variables: {\n          postText: postText,\n          postCreator: Auth.getProfile().data.username,\n        },\n      });\n      setPostText(\"\");\n      props.setAllPost([data.addPost, ...props.allPost]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"postText\") {\n      setPostText(value);\n    }\n  };\n\n  return (\n    <div>\n      <h1 style={{ fontFamily: \"Oswald, sans-serif\" }}>\n        Leaf a Thought &#127807;\n      </h1>\n      {Auth.loggedIn() ? (\n        <>\n          <Form reply onSubmit={handleFormSubmit}>\n            <Form.TextArea\n              name=\"postText\"\n              placeholder=\"Leaf a Thought...\"\n              value={postText}\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n            <Button\n              style={{\n                marginBottom: \"20px\",\n                backgroundColor: \"rgba(79,89,2,0.93)\",\n              }}\n              content=\"Post\"\n              labelPosition=\"left\"\n              icon=\"edit\"\n              primary\n              type=\"submit\"\n            />\n          </Form>\n        </>\n      ) : (\n        <p>You need to be logged in to add a comment</p>\n      )}\n    </div>\n  );\n};\n\nexport default AddComment;\n","import React, { useState, useEffect } from \"react\";\nimport Posts from \"../components/Posts\";\nimport AddComment from \"../components/AddComment\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_POSTS } from \"../utils/queries\";\n\nconst Forum = () => {\n  const { loading, data } = useQuery(QUERY_POSTS);\n  const allPosts = data?.allPosts || [];\n\n  const [allPost, setAllPost] = useState(allPosts);\n\n  useEffect(() => {\n    if (data) {\n      setAllPost(data.allPosts);\n    }\n  }, [data]);\n\n  return (\n    <main style={{ margin: \"40px\", padding: \"0em 0em 5em\"}}>\n      <AddComment setAllPost={setAllPost} allPost={allPost} />\n      <Posts allPost={allPost} />\n    </main>\n  );\n};\n\nexport default Forum;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Card,\n  Icon,\n  Progress,\n  Grid,\n  Image,\n  Form,\n  Button,\n} from \"semantic-ui-react\";\nimport Typography from \"@mui/material/Typography\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport Auth from \"../utils/auth\";\n\nexport default function Profile() {\n  const { loading, data } = useQuery(QUERY_ME);\n\n  const [plantCount, setPlantCount] = useState(0);\n\n  const [username, setUsername] = useState(\"\");\n\n  const plantData = data?.me.myPlants || [];\n\n  const userData = data?.me || [];\n\n  const NumbofPlants = () => (\n    <Progress\n      progress=\"value\"\n      color=\"brown\"\n      value={plantCount}\n      label=\"Number of Plants\"\n      style={{ width: \"300px\", display: \"flex\", alignItems: \"center\" }}\n    />\n  );\n\n  useEffect(() => {\n    if (data) {\n      setPlantCount(plantData.length);\n      setUsername(userData.username);\n    }\n  }, [data, userData, plantData]);\n\n  return (\n    <>\n      {Auth.loggedIn() ? (\n        <div id=\"proCardCont\">\n          <Grid>\n            <Grid.Column width={4}>\n              <Card>\n                <Image\n                  src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n                  wrapped\n                  ui={false}\n                />\n                <Card.Content>\n                  <Card.Header>{username}</Card.Header>\n                  <Card.Meta>\n                    <span className=\"date\">\n                      Date Joined: {userData.createdAt}\n                    </span>\n                  </Card.Meta>\n                  <Card.Description>\n                    Located in: {userData.location}\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Icon name=\"tree\" />\n                  {plantCount} Plants\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n            <Grid.Column width={9}>\n              <Form>\n                <Form.Input\n                  label=\"Bio\"\n                  placeholder=\"Tell us some things about yourself!\"\n                />\n\n                <Button>Save</Button>\n              </Form>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <NumbofPlants id=\"numOfPlants\" />\n            </Grid.Column>\n          </Grid>\n        </div>\n      ) : (\n        <div className=\"content-container\">\n          <Grid stackable columns={1}>\n            <Grid.Column textAlign=\"center\" width={16}>\n              <Typography\n                gutterBottom\n                variant=\"h4\"\n                component=\"div\"\n                style={{\n                  textAlign: \"center\",\n                  fontFamily: \"Oswald, sans-serif\",\n                  color: \"#EBDBAE\",\n                }}\n              >\n                You Must Make an Account to Manage your Garden\n              </Typography>\n            </Grid.Column>\n          </Grid>\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport facts from \"../pages/FactsDB\";\nimport { Button } from \"semantic-ui-react\";\n\nexport default function RandomFacts(props) {\n  const { fact, generateRandomFact } = props;\n  return (\n    <div className=\"card\" style={{ marginLeft: \"20px\" }}>\n      <div className=\"card-body\">\n        <p\n          className=\"card-text\"\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n        >\n          {fact.fact}\n        </p>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button\n            onClick={() => {\n              generateRandomFact(facts);\n            }}\n            type=\"submit\"\n          >\n            <i class=\"fas fa-mouse\"></i> Click for Random Fact\n          </Button>\n          <Button\n            className=\"ml-3\"\n            onClick={() => {\n              generateRandomFact(facts);\n              window.open(\n                \"https://twitter.com/intent/tweet/?text=\" +\n                  encodeURIComponent(fact.fact)\n              );\n            }}\n            type=\"submit\"\n          >\n            <i class=\"fab fa-twitter\"></i> Share Fact\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport RandomFacts from \"../components/RandomFacts\";\nimport facts from \"./FactsDB\";\nimport { Container } from \"semantic-ui-react\";\nimport homeImage from \"./assets/hangingpots.jpeg\";\nimport \"../App.css\";\n\n\nexport default class PlantFacts extends Component {\n  state = {\n    fact: facts[0].fact,\n  };\n\n  generateRandomFact = (arr) => {\n    let num = Math.floor(Math.random() * facts.length);\n\n    let newFact = facts[num];\n\n    this.setState({\n      fact: newFact.fact,\n    });\n\n    this.shuffleFacts(facts);\n  };\n\n  shuffleFacts = (arr) => {\n    return arr.sort(function () {\n      return 0.5 - Math.random();\n    });\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <div className=\"container\"\n             style={{\n                 backgroundImage: `url(${homeImage})`,\n                 backgroundPosition: 'center',\n                 backgroundSize: 'cover',\n                 backgroundRepeat: 'no-repeat',\n                 display:'flex',\n                 alignItems:'center',\n                 justifyContent:'center',\n                 minWidth: '100vw',\n                 minHeight: '100vh',\n\n             }}>\n            <div style={{backgroundColor: 'white'}}>\n          <h1\n            className=\"text-center\"\n            style={{\n              textAlign: \"center\",\n                alignContent: \"center\",\n              fontFamily: \"Oswald, sans-serif\",\n              marginLeft: \"20px\",\n              // marginTop: \"80px\",\n\n            }}\n          >\n            Random Plant Fact\n          </h1>\n          <RandomFacts\n            style={{ marginLeft: \"20px\", backgroundColor: 'white' }}\n            generateRandomFact={this.generateRandomFact}\n            fact={this.state}\n          />\n            </div>\n        </div>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport About from './pages/About';\nimport MyGarden from './pages/MyGarden';\nimport Home from './pages/Home';\nimport Testimonials from './pages/Testimonials';\nimport Contact from './pages/Contact';\nimport Team from './pages/Team';\nimport Forum from './pages/Forum';\nimport Profile from './pages/Profile';\nimport PlantFacts from './pages/PlantFacts'\n\n\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\n// https://super-duper-spoon-q7p5gp6wqrg7hpr5-3001.app.github.dev\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('id_token');\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n   <ApolloProvider client={client}>\n     <Router>\n         <Navbar/>\n     <div className=\"content-container\">\n         <Route exact path=\"/\"><Home/></Route>\n         <Route exact path=\"/contact\"><Contact/></Route>\n         <Route exact path=\"/about\"><About/></Route>\n         <Route exact path=\"/testimonials\"><Testimonials/></Route>\n         <Route exact path=\"/mygarden\"><MyGarden/></Route>\n         {/*future development pages*/}\n         <Route exact path=\"/PlantFacts\"><PlantFacts/></Route>\n         {/*<Route exact path=\"/shop\"><Shop/></Route>*/}\n         <Route exact path=\"/forum\"><Forum/></Route>\n         <Route exact path=\"/team\"><Team/></Route>\n         <Route exact path=\"/profile\"><Profile/></Route>\n     </div>\n        <Footer/>\n     </Router>\n   </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import CSS framework here (ie bootstrap)\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}